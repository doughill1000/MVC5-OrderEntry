@model OrderEntry.Models.Orders.SeparationViewModel

<title>New Separation</title>

<h2>New Separation</h2>

<br />
@using (Html.BeginForm())
{
    var separation = Model.Separation;
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Design Information</legend>
            <div class="row">
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => separation.DesignNum, new { @class = "label-colon" })
                    </div>
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => separation.DesignNum)
                        @Html.ValidationMessageFor(model => separation.DesignNum)
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => separation.DesignName, new { @class = "label-colon" })
                    </div>
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => separation.DesignName)
                        @Html.ValidationMessageFor(model => separation.DesignName)
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => separation.Owner, new { @class = "label-colon" })
                    </div>
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => separation.Owner)
                        @Html.ValidationMessageFor(model => separation.Owner)
                    </div>
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => separation.CustDesignNum, new { @class = "label-colon" })
                    </div>
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => separation.CustDesignNum)
                        @Html.ValidationMessageFor(model => separation.CustDesignNum)
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => separation.CustDesignName, new { @class = "label-colon" })
                    </div>
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => separation.CustDesignName)
                        @Html.ValidationMessageFor(model => separation.CustDesignName)
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => separation.SoldTo, new { @class = "label-colon" })
                    </div>
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => separation.SoldTo)
                        @Html.ValidationMessageFor(model => separation.SoldTo)
                    </div>
                </div>

            </div>
            <br />
        </fieldset>


        <div class="row">
            <div class="col-md-2">
                <fieldset>
                    <legend>Data Format</legend>

                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => separation.Disk) &nbsp;
                        </div>
                        @Html.EditorFor(model => separation.Disk)
                        @Html.ValidationMessageFor(model => separation.Disk)
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => separation.Swatch) &nbsp;
                        </div>
                        @Html.EditorFor(model => separation.Swatch)
                        @Html.ValidationMessageFor(model => separation.Swatch)
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => separation.Artwork) &nbsp;
                        </div>
                        @Html.EditorFor(model => separation.Artwork)
                        @Html.ValidationMessageFor(model => separation.Artwork)
                    </div>

                </fieldset>
            </div>
            <div class="col-md-6">


            </div>

        </div>
        <br /><br />

        @*

        <div class="form-group">
            @Html.LabelFor(model => separation.DateReceived, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.DateReceived)
                @Html.ValidationMessageFor(model => separation.DateReceived)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.ToBeEngraved, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.ToBeEngraved)
                @Html.ValidationMessageFor(model => separation.ToBeEngraved)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.SentToSeparation, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.SentToSeparation)
                @Html.ValidationMessageFor(model => separation.SentToSeparation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.SentToEngraveDept, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.SentToEngraveDept)
                @Html.ValidationMessageFor(model => separation.SentToEngraveDept)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.DesignDescription, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.DesignDescription)
                @Html.ValidationMessageFor(model => separation.DesignDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.DesignCoordinates, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.DesignCoordinates)
                @Html.ValidationMessageFor(model => separation.DesignCoordinates)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.WebUpload, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.WebUpload)
                @Html.ValidationMessageFor(model => separation.WebUpload)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.Comments, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.Comments)
                @Html.ValidationMessageFor(model => separation.Comments)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.SeparationCharges, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.SeparationCharges)
                @Html.ValidationMessageFor(model => separation.SeparationCharges)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => separation.SeparationChargesDescription, new { @class = "label-colon" })
            <div class="col-md-10">
                @Html.EditorFor(model => separation.SeparationChargesDescription)
                @Html.ValidationMessageFor(model => separation.SeparationChargesDescription)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
